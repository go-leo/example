// Code generated by protoc-gen-go-leo. DO NOT EDIT.
// versions:
// - protoc-gen-go-leo v2.2.0
// source: api/add/add.proto

package add

import (
	context "context"
	client "github.com/go-leo/leo/runner/net/http/client"
	server "github.com/go-leo/leo/runner/net/http/server"
	grpc "google.golang.org/grpc"
	http "net/http"
)

type AddHTTPClient interface {
	Sum(ctx context.Context, in *SumRequest) (*SumReply, error)
	Concat(ctx context.Context, in *ConcatRequest) (*ConcatReply, error)
}

type addHTTPClient struct {
	cc client.Interface
}

func NewAddHTTPClient(cc client.Interface) AddHTTPClient {
	return &addHTTPClient{cc}
}

func (c *addHTTPClient) Sum(ctx context.Context, in *SumRequest) (*SumReply, error) {
	out := new(SumReply)
	err := c.cc.Invoke(ctx, http.MethodPost, "/add.Add/Sum", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addHTTPClient) Concat(ctx context.Context, in *ConcatRequest) (*ConcatReply, error) {
	out := new(ConcatReply)
	err := c.cc.Invoke(ctx, http.MethodPost, "/add.Add/Concat", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func AddServiceDesc(srv AddServer) func() (any, *grpc.ServiceDesc, *server.ServiceDesc, func(grpc.ClientConnInterface) any) {
	return func() (any, *grpc.ServiceDesc, *server.ServiceDesc, func(grpc.ClientConnInterface) any) {
		return srv, &Add_ServiceDesc, &Add_HTTP_ServiceDesc, func(cc grpc.ClientConnInterface) any { return NewAddClient(cc) }
	}
}

func _Add_Sum_request_constructor() any {
	return new(SumRequest)
}

func _Add_Sum_HTTP_Handler(cli any, ctx context.Context, in any) (any, error) {
	metadata, _ := server.MetadataFromContext(ctx)
	return cli.(AddClient).Sum(ctx, in.(*SumRequest), grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
}

func _Add_Concat_request_constructor() any {
	return new(ConcatRequest)
}

func _Add_Concat_HTTP_Handler(cli any, ctx context.Context, in any) (any, error) {
	metadata, _ := server.MetadataFromContext(ctx)
	return cli.(AddClient).Concat(ctx, in.(*ConcatRequest), grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
}

// Add_HTTP_ServiceDesc is the server.ServiceDesc for Add service,
// and not to be introspected or modified (even as a copy)
var Add_HTTP_ServiceDesc = server.ServiceDesc{
	ServiceName: "add.Add",
	HandlerType: (*AddServer)(nil),
	Methods: []*server.MethodDesc{
		{
			HTTPMethod:         http.MethodPost,
			MethodName:         "Sum",
			Path:               "/add.Add/Sum",
			Handler:            _Add_Sum_HTTP_Handler,
			RequestConstructor: _Add_Sum_request_constructor,
		},
		{
			HTTPMethod:         http.MethodPost,
			MethodName:         "Concat",
			Path:               "/add.Add/Concat",
			Handler:            _Add_Concat_HTTP_Handler,
			RequestConstructor: _Add_Concat_request_constructor,
		},
	},
	Metadata: "api/add/add.proto",
}
